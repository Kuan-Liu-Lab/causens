[{"path":"https://kuan-liu-lab.github.io/causens/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Larry Dong. Author, maintainer. Yushu Zou. Author. Kuan Liu. Author.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dong L, Zou Y, Liu K (2024). causens: Perform causal sensitivity analyses using various statistical methods. R package version 0.0.1, https://github.com/Kuan-Liu-Lab/causens, https://kuan-liu-lab.github.io/causens/.","code":"@Manual{,   title = {causens: Perform causal sensitivity analyses using various statistical methods},   author = {Larry Dong and Yushu Zou and Kuan Liu},   year = {2024},   note = {R package version 0.0.1, https://github.com/Kuan-Liu-Lab/causens},   url = {https://kuan-liu-lab.github.io/causens/}, }"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"causens---","dir":"","previous_headings":"","what":"Perform causal sensitivity analyses using various statistical methods","title":"Perform causal sensitivity analyses using various statistical methods","text":"shark attacks occur ice cream sold? answer: related weather, unmeasured confounder.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Perform causal sensitivity analyses using various statistical methods","text":"causens R package allow perform various sensitivity analysis methods adjust unmeasured confounding within context causal inference.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Perform causal sensitivity analyses using various statistical methods","text":"{r} install.packages(\"devtools\") library(devtools) devtools::install_github(\"Kuan-Liu-Lab/causens\") library(causens)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Perform causal sensitivity analyses using various statistical methods","text":"","code":"library(causens)  # Simulate data data <- simulate_data(N = 10000, seed = 123, alpha_uz = 1,                       beta_uy = 1, treatment_effects = 1)  # Posit incorrect treatment model since U is \"missing\" trt_model <- glm(Z ~ X.1 + X.2 + X.3, data = data, family = binomial())  # Frequentist sensitivity analysis causens(trt_model, data, \"Z\", \"Y\", method = \"Li\", c1 = 0.25, c0 = 0.25)"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"citing","dir":"","previous_headings":"","what":"Citing","title":"Perform causal sensitivity analyses using various statistical methods","text":"Please cite software using:","code":"@Manual{,   title = {causens: Perform causal sensitivity analyses using various statistical methods},   author = {Larry Dong and Yushu Zou and Kuan Liu},   year = {2024},   note = {R package version 0.0.1, https://github.com/Kuan-Liu-Lab/causens},   url = {https://kuan-liu-lab.github.io/causens/}, }"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Perform causal sensitivity analyses using various statistical methods","text":"Please report bugs opening issue. question regarding usage causens, start discussion.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian parametric sensitivity analysis for causal inference — bayesian_causens","title":"Bayesian parametric sensitivity analysis for causal inference — bayesian_causens","text":"function runs Bayesian sensitivity analysis causal inference using JAGS Stan backend.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian parametric sensitivity analysis for causal inference — bayesian_causens","text":"","code":"bayesian_causens(   data,   exposure,   outcome,   confounders,   backend = \"jags\",   output_trace = FALSE,   ... )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian parametric sensitivity analysis for causal inference — bayesian_causens","text":"data data frame containing exposure, outcome, confounders. exposure name exposure variable data frame. outcome name outcome variable data frame. confounders name confounders data frame. backend backend use sensitivity analysis. Currently \"jags\" supported. output_trace Whether output full trace MCMC sampler. ... Additional arguments passed backend.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian parametric sensitivity analysis for causal inference — bayesian_causens","text":"list posterior samples causal effect exposure variable outcome, well confounder-adjusted causal effect.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Causal Effect Estimation with Sensitivity Analysis — causens","title":"Causal Effect Estimation with Sensitivity Analysis — causens","text":"function provides estimate Average Treatment Effect (ATE) using outcomes corrected unmeasured confounding via sensitivity function. Arguments ellipsis 'keyword arguments' passed sensitivity function `sf`.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Causal Effect Estimation with Sensitivity Analysis — causens","text":"","code":"causens(trt_model, data, exposure, outcome, method, ...)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Causal Effect Estimation with Sensitivity Analysis — causens","text":"trt_model treatment model object. data data frame containing variables interest. exposure name exposure variable. outcome name outcome variable. method method use sensitivity analysis. Currently, \"Li\" supported. ... Additional arguments passed sensitivity function.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Causal Effect Estimation with Sensitivity Analysis — causens","text":"point estimate corrected ATE.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/create_jags_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an JAGS model for Bayesian sensitivity analysis — create_jags_model","title":"Create an JAGS model for Bayesian sensitivity analysis — create_jags_model","text":"Creates JAGS model available string, .txt file, priors initialized uninformative default. inputs given function (now) since data-related information provided jags.model() model initialization.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/create_jags_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an JAGS model for Bayesian sensitivity analysis — create_jags_model","text":"","code":"create_jags_model()"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","title":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","text":"Generate data binary unmeasured confounder binary outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","text":"","code":"gData_U_binary_Y_binary(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"Generate data binary unmeasured confounder continuous outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"","code":"gData_U_binary_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"","code":"fulldata <- gData_U_binary_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 ) table(fulldata$Z) #>  #>   0   1  #> 260 240"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","title":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","text":"Generate data continuous unmeasured confounder binary outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","text":"","code":"gData_U_cont_Y_binary(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","title":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","text":"Generate data continuous unmeasured confounder continuous outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","text":"","code":"gData_U_cont_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"function calculates sensitivity treatment effect estimate unmeasured confounding, described Rosenbaum (2002). sensitivity defined maximum strength association unmeasured confounder treatment assignment needed explain away observed treatment effect estimate. function assumes treatment assignment binary outcome continuous.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"","code":"sf(z, e, form = \"constant\", c1 = 0, c0 = 0, s1 = 0, s0 = 0)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"z Treatment assignment (binary: 0 1) e Propensity score value (numeric) form Form sensitivity function (character: \"constant\" \"linear\") c1 Value sensitivity function z = 1 (numeric) c0 Value sensitivity function z = 0 (numeric) s1 Slope sensitivity function z = 1 (numeric) s0 Slope sensitivity function z = 0 (numeric)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"Sensitivity treatment effect estimate unmeasured confounding (numeric) sf(z, e, form)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with unmeasured confounder — simulate_data","title":"Generate data with unmeasured confounder — simulate_data","text":"Generate data unmeasured confounder","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with unmeasured confounder — simulate_data","text":"","code":"simulate_data(   ymodel = \"linear\",   N = 500,   u_type = \"binary\",   y_type = \"continuous\",   seed = 123,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   informative_u = TRUE )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with unmeasured confounder — simulate_data","text":"ymodel string indicating functional form outcome model. N number observations generated. u_type string indicating type unmeasured confounder: \"binary\" \"continuous\". y_type string indicating type outcome: \"binary\" \"continuous\". seed seed random number generator. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. informative_u boolean indicating whether unmeasured confounder driven covariates.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with unmeasured confounder — simulate_data","text":"data frame simulated dataset.","code":""}]
