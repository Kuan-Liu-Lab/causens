[{"path":"https://kuan-liu-lab.github.io/causens/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Larry Dong. Author, maintainer. Kuan Liu. Author.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dong L, Liu K (2024). causens: Perform causal sensitivity analyses using various statistical methods. R package version 0.0.1, https://github.com/Kuan-Liu-Lab/causens, https://kuan-liu-lab.github.io/causens/.","code":"@Manual{,   title = {causens: Perform causal sensitivity analyses using various statistical methods},   author = {Larry Dong and Kuan Liu},   year = {2024},   note = {R package version 0.0.1, https://github.com/Kuan-Liu-Lab/causens},   url = {https://kuan-liu-lab.github.io/causens/}, }"},{"path":[]},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Perform causal sensitivity analyses using various statistical methods","text":"causens R package allow perform various sensitivity analysis methods within context causal inference.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Perform causal sensitivity analyses using various statistical methods","text":"","code":"# The easiest way is to install from CRAN via: install.packages(\"causens\")  # Alternatively, you can install the latest version directly from GitHub install.packages(\"devtools\") library(devtools) devtools::install_github(\"Kuan-Liu-Lab/causens\") library(causens)"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Perform causal sensitivity analyses using various statistical methods","text":"","code":"library(causens)"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"citing","dir":"","previous_headings":"","what":"Citing","title":"Perform causal sensitivity analyses using various statistical methods","text":"Please cite software using:","code":"@Manual{,   title = {causens: Perform causal sensitivity analyses using various statistical methods},   author = {Larry Dong, Kuan Liu},   year = {2023},   note = {R package version 0.0.1,  https://kuan-liu-lab.github.io/causens/},   url = {https://github.com/Kuan-Liu-Lab/causens/}, }"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Perform causal sensitivity analyses using various statistical methods","text":"Please report bugs opening issue. question regarding usage causens, start discussion.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Corrected Average Treatment Effect — causens","title":"Estimate Corrected Average Treatment Effect — causens","text":"function provides estimate Average Treatment Effect (ATE) using outcomes corrected unmeasured confounding via sensitivity function.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Corrected Average Treatment Effect — causens","text":"","code":"causens(trt_model, data, exposure, outcome, c1 = 0.5, c0 = 0.3, s1 = 0, s0 = 0)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Corrected Average Treatment Effect — causens","text":"trt_model treatment model object. data data frame containing variables interest. exposure name exposure variable. outcome name outcome variable. confounders vector names confounding variables. sf R sensitivity function c(z, e).","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Corrected Average Treatment Effect — causens","text":"point estimate corrected ATE.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","title":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","text":"Generate data binary unmeasured confounder binary outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","text":"","code":"gData_U_binary_Y_binary(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a binary unmeasured confounder and binary outcome — gData_U_binary_Y_binary","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"Generate data binary unmeasured confounder continuous outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"","code":"gData_U_binary_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate data with a binary unmeasured confounder and continuous outcome — gData_U_binary_Y_cont","text":"","code":"fulldata <- gData_U_binary_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 ) table(fulldata$Z) #>  #>   0   1  #> 238 262"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","title":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","text":"Generate data continuous unmeasured confounder binary outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","text":"","code":"gData_U_cont_Y_binary(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a continuous unmeasured confounder and a binary outcome — gData_U_cont_Y_binary","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","title":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","text":"Generate data continuous unmeasured confounder continuous outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","text":"","code":"gData_U_cont_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a continuous unmeasured confounder and continuous outcome — gData_U_cont_Y_cont","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"function calculates sensitivity treatment effect estimate unmeasured confounding, described Rosenbaum (2002). sensitivity defined maximum strength association unmeasured confounder treatment assignment needed explain away observed treatment effect estimate. function assumes treatment assignment binary outcome continuous.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"","code":"sf(z, e, form = \"constant\", c1 = 0, c0 = 0, s1 = 0, s0 = 0)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"z Treatment assignment (binary: 0 1) e Propensity score value (numeric) form Form sensitivity function (character: \"constant\" \"linear\")","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding — sf","text":"Sensitivity treatment effect estimate unmeasured confounding (numeric) sf(z, e, form)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with unmeasured confounder — simulate_data","title":"Generate data with unmeasured confounder — simulate_data","text":"Generate data unmeasured confounder","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with unmeasured confounder — simulate_data","text":"","code":"simulate_data(   ymodel = \"linear\",   N = 500,   u_type = \"binary\",   y_type = \"continuous\",   seed = 123,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with unmeasured confounder — simulate_data","text":"ymodel string indicating functional form outcome model. N number observations generated. u_type string indicating type unmeasured confounder: \"binary\" \"continuous\". y_type string indicating type outcome: \"binary\" \"continuous\". seed seed random number generator. alpha_uz coefficient unmeasured confounder propensity score model. beta_uy coefficient unmeasured confounder outcome model. treatment_effects treatment effect.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with unmeasured confounder — simulate_data","text":"data frame simulated dataset.","code":""}]
