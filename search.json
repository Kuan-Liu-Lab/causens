[{"path":"https://kuan-liu-lab.github.io/causens/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 causens developers Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"causens: an R package for causal sensitivity analysis methods","text":"Methods estimate causal quantities often rely unmeasured confounding. However, practice, often case. causens R package provides methods estimate causal quantities presence unmeasured confounding. particular, causens implements methods three following school thoughts: Frequentist methods based sensitivity functions Bayesianism via parametric modelling Monte Carlo sensitivity analysis implemented methods accessible via causens function method parameter. package also provides simulate_data function generate synthetic data test methods.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"causens: an R package for causal sensitivity analysis methods","text":"package can installed GitHub via devtools.","code":"library(devtools) devtools::install_github(\"Kuan-Liu-Lab/causens\")"},{"path":[]},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"summary-of-the-unmeasured-confounder-problem","dir":"Articles","previous_headings":"Methods","what":"Summary of the Unmeasured Confounder Problem","title":"causens: an R package for causal sensitivity analysis methods","text":"causal inference, potential outcome framework often used define causal quantities. instance, treatment ZZ binary, respectively define Y(1)Y(1) Y(0)Y(0) outcomes treatment control can intervene priori. However, observational settings, often case, can still estimate estimands, e.g.¬†average treatment effect œÑ=ùîº[Y(1)‚àíY(0)]\\tau = \\mathbb{E}[Y(1) - Y(0)], using observational data using causal assumptions relate potential outcome variables observational counterpart: Consistency: Y=Y(1)Z+Y(0)(1‚àíZ)Y = Y(1)Z + Y(0)(1 - Z) Conditional exchangeability: Y(1),Y(0)‚ä•Z|XY(1), Y(0) \\perp Z | X Positivity: 0<P(Z=1|X)<10 < P(Z = 1 | X) < 1 XX set observed confounders can used adjust confounding. practice, often difficult know whether assumptions hold, particular, whether confounding variables contained XX. Hereon, define UU, set unmeasured confounders, although, causens, assume UU univariate simplicity.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"simulated-data-mechanism","dir":"Articles","previous_headings":"Methods","what":"Simulated Data Mechanism","title":"causens: an R package for causal sensitivity analysis methods","text":"posit following data generating process: X1‚àºNormal(0,1)X2‚àºNormal(0,1)X3‚àºNormal(0,1)U‚àºBern(0.5)Z‚àºBern(logit‚àí1(Œ±uzU+Œ±xzX3))Y1‚àºNormal(Œ≤uyU+0.5X1+0.5X2‚àí0.5X3)Y0‚àºNormal(0.5X1+0.5X2‚àí0.5X3).\\begin{align*}   X_1 &\\sim \\text{Normal}(0, 1) \\\\   X_2 &\\sim \\text{Normal}(0, 1) \\\\   X_3 &\\sim \\text{Normal}(0, 1) \\\\   U &\\sim \\text{Bern}(0.5) \\\\   Z &\\sim \\text{Bern}(\\text{logit}^{-1}(\\alpha_{uz} U + \\alpha_{xz} X_3)) \\\\   Y1 &\\sim \\text{Normal}(\\beta_{uy} U + 0.5 X_1 + 0.5 X_2 - 0.5 X_3) \\\\   Y0 &\\sim \\text{Normal}(0.5 X_1 + 0.5 X_2 - 0.5 X_3) \\, . \\end{align*} Using consistency, define Y=Y1Z+Y0(1‚àíZ)Y = Y_1 Z + Y_0 (1 - Z). Note , simData.R, provide options allow simulation procedure flexible. Parameters Œ±uz\\alpha_{uz} Œ≤uy\\beta_{uy} dictate unmeasured confounder UU affects treatment ZZ outcome YY, respectively; default, set 0.2 0.5.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"frequentist-methods-brumback-et-al--2004-li-et-al--2011","dir":"Articles","previous_headings":"Methods","what":"Frequentist Methods (Brumback et al.¬†2004, Li et al.¬†2011)","title":"causens: an R package for causal sensitivity analysis methods","text":"Building potential outcome framework, primary assumption requires adjustment conditional exchangeability. First, latent conditional exchangeability can articulated follows include UU: Y(1),Y(0)‚ä•Z|X,U\\begin{align*}   Y(1), Y(0) \\perp Z | X, U \\end{align*} Secondly, can define sensitivity function c(z,e)c(z, e), zz valid treatment indicator ee propensity score value. c(z,e)=ùîº[Y(z)‚à£Z=1,e]‚àíùîº[Y(z)‚à£Z=0,e]\\begin{align*}   c(z, e) = \\mathbb{E}\\Big[Y(z) \\mid Z = 1, e\\Big] - \\mathbb{E}\\Big[Y(z) \\mid Z = 0, e\\Big] \\end{align*} unmeasured confounders, c(z,e)=0c(z, e) = 0 zz ee since U=‚àÖU = \\emptyset. Given valid sensitivity function, can estimate average treatment effect via weighting approach akin inverse probability weighting. parsimony, provide API constant linear sensitivity functions, eventually allow valid user-defined sensitivity function.","code":"# Simulate data data <- simulate_data(   N = 10000, seed = 123, alpha_uz = 1,   beta_uy = 1, treatment_effects = 1 )  # Treatment model is incorrect since U is \"missing\" causens_sf(Z ~ X.1 + X.2 + X.3, \"Y\", data = data,            c1 = 0.25, c0 = 0.25)$estimated_ate #> [1] 1.005025 plot_causens(Z ~ X.1 + X.2 + X.3, data, \"Y\",              c1_upper = 0.5, c1_lower = 0, r = 1, by = 0.01)"},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"bayesian-methods","dir":"Articles","previous_headings":"Methods","what":"Bayesian Methods","title":"causens: an R package for causal sensitivity analysis methods","text":"Bayesianism, can adjust unmeasured confounding explicitly modelling UU relationship ZZ YY. Using JAGS backend carry MCMC procedure, can estimate average treatment effect marginalizing UU. assume following data-generating mechanism Bayesian model causens: X1,X2,X3‚àºiidNormal(0,1)U‚à£X‚àºBern(logit‚àí1Œ≥uxX)Z‚à£U,X‚àºBern(logit‚àí1(Œ±uzU+Œ±xzX))Y‚à£U,X,Z‚àºNormal(Œ≤uyU+Œ≤xyX+œÑZ)\\begin{align*}   X_1, X_2, X_3 &\\stackrel{iid}{\\sim} \\text{Normal}(0, 1) \\\\   U \\mid X &\\sim \\operatorname{Bern}\\left(\\text{logit}^{-1}\\gamma_{ux} X\\right) \\\\   Z \\mid U, X &\\sim \\text{Bern}\\left(\\text{logit}^{-1}(\\alpha_{uz} U + \\alpha_{xz} X)\\right) \\\\   Y \\mid U, X, Z &\\sim \\text{Normal}(\\beta_{uy} U + \\beta_{xy} X + \\tau Z) \\\\ \\end{align*}","code":"data <- simulate_data(   N = 1000, alpha_uz = 0.5, beta_uy = 0.2,   seed = 123, treatment_effects = 1,   y_type = \"continuous\" )  bayesian_causens(   Z ~ X.1 + X.2 + X.3, Y ~ X.1 + X.2 + X.3,   U ~ X.1 + X.2 + X.3, data )"},{"path":"https://kuan-liu-lab.github.io/causens/articles/causens-vignette.html","id":"monte-carlo-approach-to-causal-sensitivity-analysis","dir":"Articles","previous_headings":"Methods","what":"Monte Carlo Approach to Causal Sensitivity Analysis","title":"causens: an R package for causal sensitivity analysis methods","text":"Warning works binary outcomes, now. Monte Carlo approach proceeds following steps: Produce ‚Äúnaive‚Äù model UU ignored: logit(P(Y=1‚à£Z,X))=Œ≤0+Œ≤ZZ+Œ≤XX\\text{logit}\\Big(P(Y = 1 \\mid Z, X)\\Big) = \\beta_0 + \\beta_Z Z + \\beta_X X. estimates Œ≤ÃÇZ\\widehat{\\beta}_Z SDÃÇ(Œ≤ÃÇZ)\\widehat{\\text{SD}}(\\widehat{\\beta}_Z) Œ≤Z\\beta_Z SD(Œ≤ÃÇZ)\\text{SD}(\\widehat{\\beta}_Z) obtained fitting naive model, can sample Œ≤U,Œ≥0,Œ≥Z\\beta_U, \\gamma_0, \\gamma_Z assumed prior distribution: Œ≤U‚àºUniform(‚àí2,2)Œ≥0‚àºUniform(‚àí5,5)Œ≥Z‚àºUniform(‚àí2,2).\\begin{align*} \\beta_U &\\sim \\text{Uniform}(-2, 2) \\\\ \\gamma_0 &\\sim \\text{Uniform}(-5, 5) \\\\ \\gamma_Z &\\sim \\text{Uniform}(-2, 2) \\, . \\end{align*} sample (Œ≤U(r),Œ≥0(r),Œ≥Z(r))\\left(\\beta_U^{(r)}, \\gamma_0^{(r)}, \\gamma_Z^{(r)}\\right) indexed r=1,‚Ä¶,Rr = 1, \\dots, R, can compute bias adjusted Œ≤ÃÇZ(r)\\widehat{\\beta}_Z^{(r)} estimates: Œ≤ÃÇZ(r)=Œ≤ÃÇZ‚àílog((1+exp(Œ≤U(r)+Œ≥0(r)+Œ≥X(r)))(1+exp(Œ≥0(r)))(1+exp(Œ≤U(r)+Œ≥0(r)))(1+exp(Œ≥0(r)+Œ≥X(r))))\\widehat{\\beta}_Z^{(r)} = \\widehat{\\beta}_Z - \\log \\left(\\frac{(1 + \\exp(\\beta_U^{(r)} + \\gamma_0^{(r)} + \\gamma_X^{(r)}))(1 + \\exp(\\gamma_0^{(r)}))}{(1 + \\exp(\\beta_U^{(r)} + \\gamma_0^{(r)}))(1 + \\exp(\\gamma_0^{(r)} + \\gamma_X^{(r)}))}\\right) Finally, can sample bias adjusted average treatment effect estimate Œ≤(r)‚àºNormal(Œ≤ÃÇZ(r),SDÃÇ(Œ≤ÃÇZ)2)\\beta^{(r)} \\sim \\text{Normal}\\left(\\widehat{\\beta}_Z^{(r)}, \\widehat{SD}\\left(\\widehat{\\beta}_Z\\right)^2\\right) account errors incurred previous steps. Œ≤Z(1),‚Ä¶,Œ≤Z(R)\\beta^{(1)}_Z, \\dots, \\beta^{(R)}_Z, can compute Monte Carlo estimate average treatment effect taking average.","code":"data <- simulate_data(   N = 1000, alpha_uz = 0.2, beta_uy = 0.5,   seed = 123, treatment_effects = 1, y_type = \"binary\",   informative_u = FALSE )  causens_monte_carlo(\"Y\", \"Z\", c(\"X.1\", \"X.2\", \"X.3\"), data)$estimated_ate #> [1] 0.9929688"},{"path":"https://kuan-liu-lab.github.io/causens/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Larry Dong. Author, maintainer. Yushu Zou. Author. Kuan Liu. Author.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dong L, Zou Y, Liu K (2025). causens: Perform Causal Sensitivity Analyses Using Various Statistical Methods. R package version 0.0.3, https://kuan-liu-lab.github.io/causens/.","code":"@Manual{,   title = {causens: Perform Causal Sensitivity Analyses Using Various Statistical Methods},   author = {Larry Dong and Yushu Zou and Kuan Liu},   year = {2025},   note = {R package version 0.0.3},   url = {https://kuan-liu-lab.github.io/causens/}, }"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"causens---","dir":"","previous_headings":"","what":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","title":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","text":"shark attacks occur ice cream sold? answer: related weather, unmeasured confounder.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","text":"causens R package allow perform various sensitivity analysis methods adjust unmeasured confounding within context causal inference. Currently, provide following methods: Sensitivity function + propensity score (Li et al.¬†(2011), Brumback et al.¬†(2004)) Bayesian parametric sensitivity analysis (McCandless et Gustafson (2017), Section 2.2) Monte Carlo sensitivity analysis (McCandless et Gustafson (2017), Section 2.3)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","text":"","code":"install.packages(\"devtools\") library(devtools) devtools::install_github(\"Kuan-Liu-Lab/causens\") library(causens)"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","text":"","code":"library(causens)  # Simulate data data <- simulate_data(N = 10000, seed = 123, alpha_uz = 1,                       beta_uy = 1, treatment_effects = 1)  # Treatment model is incorrect since U is \"missing\" causens_sf(Z ~ X.1 + X.2 + X.3, \"Y\", data = data, c1 = 0.25, c0 = 0.25)$estimated_ate"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"citing","dir":"","previous_headings":"","what":"Citing","title":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","text":"Please cite software using:","code":"@Manual{,   title = {causens: Perform Causal Sensitivity Analyses Using Various Statistical Methods},   author = {Larry Dong and Yushu Zou and Kuan Liu},   year = {2024},   note = {R package version 0.0.3, https://github.com/Kuan-Liu-Lab/causens},   url = {https://kuan-liu-lab.github.io/causens/}, }"},{"path":"https://kuan-liu-lab.github.io/causens/index.html","id":"getting-help-or-contributing","dir":"","previous_headings":"","what":"Getting help or contributing","title":"Perform Causal Sensitivity Analyses Using Various Statistical Methods","text":"Please report bugs opening issue. question regarding usage causens, please open discussion. like contribute package, please open pull request.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian parametric sensitivity analysis for causal inference ‚Äî bayesian_causens","title":"Bayesian parametric sensitivity analysis for causal inference ‚Äî bayesian_causens","text":"function runs Bayesian sensitivity analysis causal inference using JAGS Stan backend. now, JAGS supported.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian parametric sensitivity analysis for causal inference ‚Äî bayesian_causens","text":"","code":"bayesian_causens(   trt_model,   outcome_model,   U_model,   data,   beta_uy = ~dunif(-2, 2),   alpha_uz = ~dunif(-2, 2),   backend = \"jags\",   output_trace = FALSE,   ... )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian parametric sensitivity analysis for causal inference ‚Äî bayesian_causens","text":"trt_model treatment model object formula. outcome_model outcome model object formula. U_model unmeasured confounder model object formula. data data frame containing exposure, outcome, confounder variables. beta_uy Prior distribution effect missing confounder U outcome Y. alpha_uz Prior distribution effect missing confounder U treatment assignment mechanism Z. backend backend use sensitivity analysis. Currently \"jags\" supported. output_trace Whether output full trace MCMC sampler. ... Additional arguments passed backend.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/bayesian_causens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian parametric sensitivity analysis for causal inference ‚Äî bayesian_causens","text":"list posterior samples causal effect exposure variable outcome, well confounder-adjusted causal effect.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_monte_carlo.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo sensitivity analysis for causal effects ‚Äî causens_monte_carlo","title":"Monte Carlo sensitivity analysis for causal effects ‚Äî causens_monte_carlo","text":"function performs Monte Carlo sensitivity analysis causal effects.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_monte_carlo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo sensitivity analysis for causal effects ‚Äî causens_monte_carlo","text":"","code":"causens_monte_carlo(outcome, exposure, confounders, data, ...)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_monte_carlo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo sensitivity analysis for causal effects ‚Äî causens_monte_carlo","text":"outcome name outcome variable data frame. exposure name exposure variable data frame. confounders name confounders data frame. data data frame containing exposure, outcome, confounder variables. ... Additional arguments passed function.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_monte_carlo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo sensitivity analysis for causal effects ‚Äî causens_monte_carlo","text":"estimated causal effect.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian Estimation of ATE Subject to Unmeasured Confounding ‚Äî causens_sf","title":"Bayesian Estimation of ATE Subject to Unmeasured Confounding ‚Äî causens_sf","text":"function provides estimate Average Treatment Effect (ATE) using Bayesian modelling.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian Estimation of ATE Subject to Unmeasured Confounding ‚Äî causens_sf","text":"","code":"causens_sf(trt_model, outcome, data, bootstrap = FALSE, B = 1000, ...)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian Estimation of ATE Subject to Unmeasured Confounding ‚Äî causens_sf","text":"trt_model model formula specifying treatment model. outcome name outcome variable. data data frame containing exposure, outcome, confounder variables. bootstrap logical indicating whether perform bootstrap estimation 95% confidence interval. B bootstrap argument TRUE, number bootstrap samples generate. ... Additional arguments passed sensitivity function.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/causens_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian Estimation of ATE Subject to Unmeasured Confounding ‚Äî causens_sf","text":"point estimate corrected ATE.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/create_jags_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an JAGS model for Bayesian sensitivity analysis ‚Äî create_jags_model","title":"Create an JAGS model for Bayesian sensitivity analysis ‚Äî create_jags_model","text":"Creates JAGS model available string, .txt file, priors initialized uninformative default.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/create_jags_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an JAGS model for Bayesian sensitivity analysis ‚Äî create_jags_model","text":"","code":"create_jags_model(binary_outcome, beta_uy, alpha_uz)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/create_jags_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an JAGS model for Bayesian sensitivity analysis ‚Äî create_jags_model","text":"binary_outcome Boolean indicating whether outcome binary. beta_uy Prior distribution effect missing confounder U outcome Y. alpha_uz Prior distribution effect missing confounder U treatment assignment mechanism Z. inputs given function (now) since data-related information provided jags.model() model initialization.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a binary unmeasured confounder and binary outcome ‚Äî gData_U_binary_Y_binary","title":"Generate data with a binary unmeasured confounder and binary outcome ‚Äî gData_U_binary_Y_binary","text":"Generate data binary unmeasured confounder binary outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a binary unmeasured confounder and binary outcome ‚Äî gData_U_binary_Y_binary","text":"","code":"gData_U_binary_Y_binary(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a binary unmeasured confounder and binary outcome ‚Äî gData_U_binary_Y_binary","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz Unmeasured confounder coefficient propensity score model. beta_uy Unmeasured confounder coefficient outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with a binary unmeasured confounder and binary outcome ‚Äî gData_U_binary_Y_binary","text":"data frame simulated dataset U binary, Y binary.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a binary unmeasured confounder and continuous outcome ‚Äî gData_U_binary_Y_cont","title":"Generate data with a binary unmeasured confounder and continuous outcome ‚Äî gData_U_binary_Y_cont","text":"Generate data binary unmeasured confounder continuous outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a binary unmeasured confounder and continuous outcome ‚Äî gData_U_binary_Y_cont","text":"","code":"gData_U_binary_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a binary unmeasured confounder and continuous outcome ‚Äî gData_U_binary_Y_cont","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz Unmeasured confounder coefficient propensity score model. beta_uy Unmeasured confounder coefficient outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with a binary unmeasured confounder and continuous outcome ‚Äî gData_U_binary_Y_cont","text":"data frame simulated dataset U binary, Y continuous.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_binary_Y_cont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate data with a binary unmeasured confounder and continuous outcome ‚Äî gData_U_binary_Y_cont","text":"","code":"fulldata <- gData_U_binary_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 ) table(fulldata$Z) #>  #>   0   1  #> 238 262"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a continuous unmeasured confounder and a binary outcome ‚Äî gData_U_cont_Y_binary","title":"Generate data with a continuous unmeasured confounder and a binary outcome ‚Äî gData_U_cont_Y_binary","text":"Generate data continuous unmeasured confounder binary outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a continuous unmeasured confounder and a binary outcome ‚Äî gData_U_cont_Y_binary","text":"","code":"gData_U_cont_Y_binary(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a continuous unmeasured confounder and a binary outcome ‚Äî gData_U_cont_Y_binary","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz Unmeasured confounder coefficient propensity score model. beta_uy Unmeasured confounder coefficient outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with a continuous unmeasured confounder and a binary outcome ‚Äî gData_U_cont_Y_binary","text":"data frame simulated dataset U continuous, Y binary.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with a continuous unmeasured confounder and continuous outcome ‚Äî gData_U_cont_Y_cont","title":"Generate data with a continuous unmeasured confounder and continuous outcome ‚Äî gData_U_cont_Y_cont","text":"Generate data continuous unmeasured confounder continuous outcome","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with a continuous unmeasured confounder and continuous outcome ‚Äî gData_U_cont_Y_cont","text":"","code":"gData_U_cont_Y_cont(   ymodel = \"linear\",   N = 500,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   seed = 123 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with a continuous unmeasured confounder and continuous outcome ‚Äî gData_U_cont_Y_cont","text":"ymodel string indicating functional form outcome model. N number observations generated. alpha_uz Unmeasured confounder coefficient propensity score model. beta_uy Unmeasured confounder coefficient outcome model. treatment_effects treatment effect. seed seed random number generator.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/gData_U_cont_Y_cont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with a continuous unmeasured confounder and continuous outcome ‚Äî gData_U_cont_Y_cont","text":"data frame simulated dataset U continuous, Y continuous.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/plot_causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ATE with respect to sensitivity function value when it is constant, i.e. c(1, e) = c1 and c(0, e) = c0. ‚Äî plot_causens","title":"Plot ATE with respect to sensitivity function value when it is constant, i.e. c(1, e) = c1 and c(0, e) = c0. ‚Äî plot_causens","text":"function plots 1) ATE function sensitivity function value constant 2) associate 95 interval obtained via bootstrapping, desired. latter process can take seconds minutes.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/plot_causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ATE with respect to sensitivity function value when it is constant, i.e. c(1, e) = c1 and c(0, e) = c0. ‚Äî plot_causens","text":"","code":"plot_causens(   trt_model,   data,   outcome,   c1_upper = 0.5,   c1_lower = 0,   r = 1,   by = 0.01 )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/plot_causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ATE with respect to sensitivity function value when it is constant, i.e. c(1, e) = c1 and c(0, e) = c0. ‚Äî plot_causens","text":"trt_model treatment model object formula fitted glm. data data frame containing variables interest. outcome name outcome variable. c1_upper upper bound sensitivity function value. c1_lower lower bound sensitivity function value. r ratio c1 c0. increment sensitivity function value.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/plot_causens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ATE with respect to sensitivity function value when it is constant, i.e. c(1, e) = c1 and c(0, e) = c0. ‚Äî plot_causens","text":"plot ATE function c1 values.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/process_model_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Process model formula ‚Äî process_model_formula","title":"Process model formula ‚Äî process_model_formula","text":"helper function takes model `formula` format returns list comprising various information, including fitted model R object.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/process_model_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process model formula ‚Äî process_model_formula","text":"","code":"process_model_formula(model, data)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/process_model_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process model formula ‚Äî process_model_formula","text":"model model object formula fitted glm. data data frame used fitting model.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/process_model_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process model formula ‚Äî process_model_formula","text":"list containing fitted model, model formula, response variable name, confounder names.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sensitivity of treatment effect estimate to unmeasured confounding ‚Äî sf","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding ‚Äî sf","text":"function calculates sensitivity treatment effect estimate unmeasured confounding, described Rosenbaum (2002). sensitivity defined maximum strength association unmeasured confounder treatment assignment needed explain away observed treatment effect estimate. function assumes treatment assignment binary outcome continuous.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding ‚Äî sf","text":"","code":"sf(z, e, form = \"constant\", c1 = 0, c0 = 0, s1 = 0, s0 = 0)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding ‚Äî sf","text":"z Treatment assignment (binary: 0 1) e Propensity score value (numeric) form Form sensitivity function (character: \"constant\" \"linear\") c1 Value sensitivity function z = 1 (numeric) c0 Value sensitivity function z = 0 (numeric) s1 Slope sensitivity function z = 1 (numeric) s0 Slope sensitivity function z = 0 (numeric)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sensitivity of treatment effect estimate to unmeasured confounding ‚Äî sf","text":"Sensitivity treatment effect estimate unmeasured confounding (numeric) sf(z, e, form)","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data with unmeasured confounder ‚Äî simulate_data","title":"Generate data with unmeasured confounder ‚Äî simulate_data","text":"Generate data unmeasured confounder","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data with unmeasured confounder ‚Äî simulate_data","text":"","code":"simulate_data(   ymodel = \"linear\",   N = 500,   u_type = \"binary\",   y_type = \"continuous\",   seed = 123,   alpha_uz = 0.2,   beta_uy = 0.5,   treatment_effects = 1,   informative_u = FALSE )"},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data with unmeasured confounder ‚Äî simulate_data","text":"ymodel string indicating functional form outcome model. N number observations generated. u_type string indicating type unmeasured confounder: \"binary\" \"continuous\". y_type string indicating type outcome: \"binary\" \"continuous\". seed seed random number generator. alpha_uz Unmeasured confounder coefficient propensity score model. beta_uy Unmeasured confounder coefficient outcome model. treatment_effects treatment effect. informative_u boolean indicating whether unmeasured confounder driven covariates.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/simulate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data with unmeasured confounder ‚Äî simulate_data","text":"data frame simulated dataset.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.bayesian_causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the results of a causal sensitivity analysis via Bayesian modelling of an unmeasured confounder. ‚Äî summary.bayesian_causens","title":"Summarize the results of a causal sensitivity analysis via Bayesian modelling of an unmeasured confounder. ‚Äî summary.bayesian_causens","text":"Summarize results causal sensitivity analysis via Bayesian modelling unmeasured confounder.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.bayesian_causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the results of a causal sensitivity analysis via Bayesian modelling of an unmeasured confounder. ‚Äî summary.bayesian_causens","text":"","code":"# S3 method for class 'bayesian_causens' summary(object, ...)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.bayesian_causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the results of a causal sensitivity analysis via Bayesian modelling of an unmeasured confounder. ‚Äî summary.bayesian_causens","text":"object object class bayesian_causens. ... Additional arguments passed summary.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.causens_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the results of a causal sensitivity analysis via sensitivity function. ‚Äî summary.causens_sf","title":"Summarize the results of a causal sensitivity analysis via sensitivity function. ‚Äî summary.causens_sf","text":"Summarize results causal sensitivity analysis via sensitivity function.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.causens_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the results of a causal sensitivity analysis via sensitivity function. ‚Äî summary.causens_sf","text":"","code":"# S3 method for class 'causens_sf' summary(object, ...)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.causens_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the results of a causal sensitivity analysis via sensitivity function. ‚Äî summary.causens_sf","text":"object object class causens_sf. ... Additional arguments passed summary.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.causens_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the results of a causal sensitivity analysis via sensitivity function. ‚Äî summary.causens_sf","text":"summary results causal sensitivity analysis.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.monte_carlo_causens.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the results of a causal sensitivity analysis via the Monte Carlo method. ‚Äî summary.monte_carlo_causens","title":"Summarize the results of a causal sensitivity analysis via the Monte Carlo method. ‚Äî summary.monte_carlo_causens","text":"Summarize results causal sensitivity analysis via Monte Carlo method.","code":""},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.monte_carlo_causens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the results of a causal sensitivity analysis via the Monte Carlo method. ‚Äî summary.monte_carlo_causens","text":"","code":"# S3 method for class 'monte_carlo_causens' summary(object, ...)"},{"path":"https://kuan-liu-lab.github.io/causens/reference/summary.monte_carlo_causens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the results of a causal sensitivity analysis via the Monte Carlo method. ‚Äî summary.monte_carlo_causens","text":"object object class causens_monte_carlo. ... Additional arguments passed summary.","code":""}]
